{
  "_format": "hh-sol-artifact-1",
  "contractName": "MagnusToken",
  "sourceName": "contracts/MagnusToken.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initialOwner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b506040516100203803806100208339818101604052602081101561003357600080fd5b8101908080519060200190929190505050600080600060006040516020015260405185600081526020018481526020018360200152602001828152602001925050506000818301526020818301526040808201925050909190505080600081905550818103818111156100c357fe5b04925050505050604051600f19818316600f191681830191505060408051820191905060405180910390a2600181905550808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055505061066d8061014e6000396000f3fe608060405234801561001057600080fd5b50600436106100a75760003560e01c8063095ea7b3146100ac57806318160ddd1461011d57806323b872dd14610156578063313ce5671461019f57806370a08231146101b6578063a9059cbb146101f3578063dd62ed3e1461023a578063f2fde38b1461026657806327e235e31461027157806340c10f19146102b4578063715018a6146102d55780638da5cb5b146102f6575b600080fd5b6100f960048036038101906100b491906104d4565b61010b81610313565b604051901515815260200190565b6101446004803603810190610129919061042a565b61013381610334565b60405190815260200190565b61018c6004803603810190610161919061051e565b61017881610359565b60405190815260200190565b6101a7610392565b6040518082815260200191505060405180910390f35b6101e160048036038101906101c19190610474565b6101d28161039e565b60405190815260200190565b61022760048036038101906101fe919061042a565b610213816103f1565b60405190815260200190565b61026e6004803603810190610245919061042a565b61025881610408565b60405190815260200190565b61026e61041b565b6102a2600480360381019061027c91906105c3565b61028e816103f1565b60405190815260200190565b6102d761041b565b6040518082815260200191505060405180910390f35b6102fd610425565b6040518082815260200191505060405180910390f35b3360009081526001602052604090205416905081565b60005481565b806000819055505b815181151561035357fe5b04905090565b60005490565b600080546001600160a01b0319166001600160a01b0392909216919091179054565b60005490565b6000819050919050565b81565b600080546001600160a01b0319169055565b8082018082015b8181101561046e57600080fd5b81356001600160a01b0316811461048457600080fd5b5090919050565b8060008190555073ffffffffffffffffffffffffffffffffffffffff811681146104ca57600080fd5b506001600160a01b03169150915060018190555050565b8281600001526001600160a01b0382166000908152600260205260409020541681565b60006001600160a01b038116600081815260026020526040902054165b60006001600160a01b0381166000908152600260205260409020555b6000546001600160a01b0316ff5b3360009081526001602052604090205416905081565b6000806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055505b505056fea26469706673582212202657d4206584c311c97a7e8f34f6bbd6a8a3a9be1c504a92c3066343513b632964736f6c63430008180033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "solcVersion": "0.8.24",
  "storageLayout": {
    "storage": [
      {
        "astId": 5267,
        "contract": "ChessGame",
        "label": "magnusToken",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 5292,
        "contract": "ChessGame",
        "label": "games",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Game)4625_storage)"
      },
      {
        "astId": 5295,
        "contract": "ChessGame",
        "label": "nextGameId",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 5298,
        "contract": "ChessGame",
        "label": "fixedReward",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 5301,
        "contract": "ChessGame",
        "label": "houseFee",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 4600,
        "contract": "Ownable",
        "label": "_owner",
        "offset": 0,
        "slot": "52",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(SpectatorBet)4609_storage)dyn": {
        "base": "t_struct(SpectatorBet)4609_storage",
        "encoding": "dynamic_array",
        "label": "struct ChessGame.SpectatorBet[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(Game)4625_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct ChessGame.Game)",
        "numberOfBytes": "32",
        "value": "t_struct(Game)4625_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Game)4625_storage": {
        "encoding": "inplace",
        "label": "struct ChessGame.Game",
        "members": [
          {
            "label": "player1",
            "type": "t_address",
            "offset": 0,
            "slot": "0"
          },
          {
            "label": "player2",
            "type": "t_address",
            "offset": 0,
            "slot": "1"
          },
          {
            "label": "winner",
            "type": "t_address",
            "offset": 0,
            "slot": "2"
          },
          {
            "label": "isFinished",
            "type": "t_bool",
            "offset": 0,
            "slot": "3"
          },
          {
            "label": "pgn",
            "type": "t_string_storage",
            "offset": 0,
            "slot": "4"
          },
          {
            "label": "betAmount",
            "type": "t_uint256",
            "offset": 0,
            "slot": "5"
          },
          {
            "label": "whiteBet",
            "type": "t_address",
            "offset": 0,
            "slot": "6"
          },
          {
            "label": "blackBet",
            "type": "t_address",
            "offset": 0,
            "slot": "7"
          },
          {
            "label": "betsLocked",
            "type": "t_bool",
            "offset": 0,
            "slot": "8"
          },
          {
            "label": "spectatorBets",
            "type": "t_array(t_struct(SpectatorBet)4609_storage)dyn",
            "offset": 0,
            "slot": "9"
          },
          {
            "label": "totalWhiteBets",
            "type": "t_uint256",
            "offset": 0,
            "slot": "10"
          },
          {
            "label": "totalBlackBets",
            "type": "t_uint256",
            "offset": 0,
            "slot": "11"
          },
          {
            "label": "hasSpectatorBet",
            "type": "t_mapping(t_address,t_bool)",
            "offset": 0,
            "slot": "12"
          }
        ],
        "numberOfBytes": "384"
      },
      "t_struct(SpectatorBet)4609_storage": {
        "encoding": "inplace",
        "label": "struct ChessGame.SpectatorBet",
        "members": [
          {
            "label": "spectator",
            "type": "t_address",
            "offset": 0,
            "slot": "0"
          },
          {
            "label": "amount",
            "type": "t_uint256",
            "offset": 0,
            "slot": "1"
          },
          {
            "label": "isWhite",
            "type": "t_bool",
            "offset": 0,
            "slot": "2"
          },
          {
            "label": "isPaid",
            "type": "t_bool",
            "offset": 1,
            "slot": "2"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
} 